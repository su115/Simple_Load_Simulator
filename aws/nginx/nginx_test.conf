#	Protocol	SSL	Port	Num	
#	http		no	80	1
#	https		yes	443	2
#	httpv2		yes	444	3

#	Location	Need		Answer		Used		Num
#	/		nothing		200,		1,2,3		1
#					all files,
#					404
#	/health		nothing		200		1,2,3		2
#	/apikey		param: apikey	200,401		1,2,3		3
# 	/redirect	nothing		301		1.4->2.2	4
# 							2.4->2.2
# 							3.4->2.2
# 	/phealth	method: POST	200		1,2,3		5
# 	/predirect1	method: POST	301		1.6->2.5	6
# 							2.6->2.5
# 							3.6->2.5
# 	/papikey	method: POST	200,401		1,2,3		7
# 			param: apikey
# 	/addheader	nothing		200,		1,2,3		8
# 					my_header value	
events {
}
http {
    charset UTF-8;

    js_import headers.js;
    js_set $headers_json headers.headers_json;
    log_format  men  '$remote_addr [$time_local] $remote_addr $request $status \n' '$headers_json \n';
    server {
        listen       80;
	listen	443 ssl;
	listen  444 ssl http2;
	ssl_certificate /nginx/conf/ssl/nginx-selfsigned.crt;
	ssl_certificate_key /nginx/conf/ssl/nginx-selfsigned.key;

	set $apikey '4420d1918bbcf7686defdf9560b';
        server_name  localhost;
        access_log   logs/host.access.log  men;
###############################################
        location / {
            		root   html;
            		#index  index.html;
			
    			try_files $uri $uri/  =404;
              	}
	location =/health {
			return 200 'health';
		}
	location =/apikey {
			if ($arg_apikey != $apikey){
				return 401 "apikey is invalid";
			}
			return 200 "health";
		}
	location =/redirect {
			return 301 https://$host/health;
		}
	# POST
	location =/phealth {
			proxy_method POST;
			return 200 "health";
		}
	location =/papikey {
			proxy_method POST;
			if ($arg_apikey != $apikey){
				return 401 "apikey is invalid";
			}
			return 200 "health";
		}
	location =/predirect1 {
			proxy_method POST;
			return 301 https://$host/health;
		}
	location =/addheader {
			add_header my_header value;
			return 200 "health";	
		}
###############################################
	}
}

